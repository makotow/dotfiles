#!/bin/sh

### SPEC
# このツールの責任範囲は 導入後のアップグレードの管理、導入後の管理を目標とする。
# gen はインストール済みのapp から一覧を作成し、インストール用のshを生成する。
# bundle install は gen で生成したファイルを使用してbundle を提供する
# gen は適宜呼び出してbundleinstall.sh を生成しておくのもいいかもしれない。
###

function usage {
    cat <<EOF

$(basename ${0}) is a tool for homebrew and homebrew cask.
fetch new formula, then upgrade formulas, then clenaup for brew and brew-cask.

Usage:
    $(basename ${0}) [command] [<options>]

Command:
    update            fetch the newest version of Homebrew from github using git
    upgrade           [package name]
    updateall         update && upgrade && cleanup
    cleanup           Remove any older versions from cellar and cask
    gen               Generate brewinstalll.sh
Options:
    --version, -v     print $(basename ${0}) version
    --help, -h        print this
    --debug, -d       debug mode (set -x)
EOF
}

## utiity にあるはずなので入れ替えする。
# あとで色をつけるechoにする
# 別ファイルにして読み込むべき？
### utilities
# function debug() { ((DEBUG)) && yellow ">>> $*"; }
# function require_cmd() { which -s $1}

NORMAL=$(tput sgr0)

LOG=$(tput sgr0; tput bold)
GREEN=$(tput setaf 2; tput bold)
YELLOW=$(tput setaf 3)
RED=$(tput setaf 1)

function red() {
  echo "$RED${*}$NORMAL"
}

function green() {
  echo "$GREEN${*}$NORMAL"
}

function yellow() {
  echo "$YELLOW${*}$NORMAL"
}

function log() {
  echo "$LOG${*}$NORMAL"
}

function version {
  log "$(basename ${0}) version 0.0.2 "
}

function update {
  brew update --all
}

function upgrade {
  # upgrade for brew
  brew upgrade

  # upgrade for brew-cask
  for c in `brew cask list`; do ! brew cask info $c | grep -qF "Not installed" || brew cask install $c; done
}

function cask_outdated {
  caskroom="/opt/homebrew-cask/Caskroom"
  apps=($(brew cask list))
  for a in ${apps[@]};do
    info=$(brew cask info $a)
    current=$(echo "$info"|grep "${caskroom}/${a}"|cut -d' ' -f1)
    for dir in $(ls ${caskroom}/${a});do
      testdir="${caskroom}/${a}/${dir}"
      if [ "$testdir" != "$current" ];then
        rm -rf "$testdir"
      fi
    done
  done
}

function bundleinstall {
    # argument - bundle file name.
    # TODO default implement
    ./brewinstall.sh
}

function cleanup {
  brew cleanup
  brew cask cleanup
  cask_outdated
}

function gen {
  # TODO brew install 時のoptionを拾う方法
  bundlefile='brewinstall.sh' # default name
  echo "### This file autogenerated file by brewmanager" > ${bundlefile}
  brew tap | awk '{print "brew tap", $0}' >> ${bundlefile}
  brew list | awk '{print "brew install", $0}' >> ${bundlefile}
  brew cask list | awk '{print "brew cask install", $0}' >> ${bundlefile}
  green "Generate ${bundlefile}"
}

## getopt, getopts を使わない理由。
## 自前でオプション解析をしている理由は
## サブコマンド後の引数解析ができない、ロングオプションが使用できないため。
case ${1} in

    update)
        update
    ;;

    upgrade)
        upgrade
    ;;

    updateall)
      update && upgrade && cleanup
    ;;

    bundle)
        bundleinstall
    ;;

    cleanup)
        cleanup
    ;;

    gen)
        gen
    ;;

    --help|-h)
        usage
    ;;

    --version|-v)
        version
    ;;

    --debug|-d)
      set -x
    ;;

    *)
        red "[ERROR] Invalid subcommand '${1}'"
        usage
        exit 1
    ;;
esac
